#!/bin/sh

# send list of installed ports to build host
#
# Usage: stage [-a]
# -a: append to the list on the build server rather than overwriting
#
# globals expected in ${HOME}/.ports.conf with sample values
# bhost='ser.ftfl.ca'  # build host
# listf='ports.txt' # list file of ports to build, relative to $HOME

. "$HOME/.ports.conf"

stage () {
  hostname=$(hostname)
  of=$(pkg info -oAq | \
          awk -F'[[:blank:]]*:[[:blank:]]*' \
            '/^(Origin|flavor)/ {
             if ($1 == "Origin" && $2 != "base") { print $2 }
             if ($1 == "flavor" && $2 != "default") { print "@"$2 }
          }')
  printf "%s\\n" "$of" | tr '\n' ' ' | sed 's/ @/@/g' | tr ' ' '\n' > "$listf"

  if [ "$hostname" != "$bhost" ]; then
    if [ "$1" = 'yes' ]; then
      #printf "Appending the list of ports to %s:%s...\\n" "$bhost" "$listf"
      printf "* ssh %s \"cat >> %s\" < %s\\n" "$bhost" "$listf" "$listf"
      ssh "$bhost" "cat >> $listf" < "$listf"
      ret=$?
    else
      #printf "Sending the list of ports to %s:%s...\\n" "$bhost" "$listf"
      printf "* scp %s %s:%s\\n" "$listf" "$bhost" "$listf"
      scp "$listf" "${bhost}:${listf}"
      ret=$?
    fi
  else
    ret=0
  fi

  return "$ret"

}

############################################ main

[ -n "${listf##/*}" ] && listf="${HOME}/$listf"

appendp=no
while getopts ":a" opt; do
  case $opt in
    a) appendp=yes ;;
    *) printf "Invalid option: -%s\\n." "$opt"; exit 1 ;;
  esac
done

listf="$listf.$(hostname -s)"

stage "$appendp"
